

#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

// Declare LCD object for software SPI
//Adafruit_PCD8544(CLK,DIN,D/C,CE,RST);


Adafruit_PCD8544 display = Adafruit_PCD8544(3, 4, 5, 7, 6);
int load = 200;     //load represents counter load. suppose this is miliseconds
int ground = 47;          
int wait = load;           //wait controls the falling speed of snow and growth speed of pile, in miliseconds

uint8_t data[] = {
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,
   0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,
   0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
  0xff,0xff,0xff,0xff
};


class Flake{
  public:
     unsigned int y1;
     unsigned int y2;
     unsigned int y3;
      unsigned int y4;
      
     void fall(){
        y1 += 1;
        y2 += 1;
        y3 += 1;
        y4 +=1;
        if (y1>=48) y1 = 0;
        if (y2>=48) y2 = 0;
        if (y3>=48) y3 = 0;
        if (y4>=48) y4 = 0;
     }

     void draw(){
        
        display.setCursor(50, y1);
        display.println("*");
        display.setCursor(70,y2);
        display.println("*");
        display.setCursor(10, y3);
        display.println("*");
        display.setCursor(30, y4);
        display.println("*");
     }

     Flake(){
        y1 = 0;
        y2 = 48;
        y4 = 30;
        y3 = 10;
     }
};

  Flake flake;

  
void setup()   {
  Serial.begin(9600);

  //Initialize Display
  display.begin();
  display.setContrast(50);
  display.clearDisplay();
  
  }


void loop() {
  // Display Text
  display.clearDisplay();
      
  flake.fall();
  flake.draw();

   if (load>0)
    load--;
   else { //when counter load finished, display a message
    display.setCursor(42,24);
    display.println("Work period ended! Take a break!");
    return;
   }
    
  int mground = load/10;
  int i = 0;
  if (mground>=0){
    //use do...while as we always want to keep a ground
    do { 
      display.drawBitmap(0,ground-3*i,data,84,3,BLACK);
      i++;
    } while(i<=10-mground);
  }

  display.display();
  delay(wait);
  }
